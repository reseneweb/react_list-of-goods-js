{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_OPTIONS","GoodList","goods","map","good","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACE,GADFA,EAEM,WAFNA,EAGI,SAGJC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAoBA,UA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAASN,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAA0BT,EAA1B,GAA6D,IAA1BK,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCG,EAAc,YAAOV,GAmB3B,OAjBIK,GACFK,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQR,GACN,KAAKP,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXR,GACFG,EAAeM,UAGVN,EAOLO,CAAiBpB,EAAiB,CAAEQ,YAAWE,eAEjD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYf,IAAcP,IAC9BuB,QAAS,WACPf,EAAaR,IALjB,iCAWA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYf,IAAcP,IAC9BuB,QAAS,kBAAMf,EAAaR,IAJ9B,4BASA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAab,IACjBc,QAAS,kBAAMb,GAAeD,IAJhC,sBASEF,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAaR,GACbU,GAAc,IALlB,sBAYJ,cAAC,EAAD,CAAUR,MAAOS,QCtGvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af2b6b70.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_OPTIONS = {\n  NONE: '',\n  ALPHABET: 'alphabet',\n  LENGTH: 'length',\n};\n\nconst GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\">{good}</li>))}\n  </ul>\n);\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_OPTIONS.ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_OPTIONS.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SORT_OPTIONS.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods\n  = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_OPTIONS.ALPHABET })}\n          onClick={() => {\n            setSortField(SORT_OPTIONS.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_OPTIONS.LENGTH })}\n          onClick={() => setSortField(SORT_OPTIONS.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SORT_OPTIONS.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}